- Task scoring (and sorting)
- Bugfixes
    - Better error messages in place of assertion errors
    - For never-paused task, no need to store both first and last started timestamps
    - Name uniqueness on projects/tasks
- CLI app via rich
    - Subcommands
        - settings: interact with settings (once there are some)
        - shell: launch shell
        - web: launch web app
- Small QoL improvements
    - Catch Ctrl-C within sequential prompts to go back to main loop
    - Set widths for each help menu separately...
    - Accept today/tomorrow/yesterday as valid due dates
    - Relax URL parsing to infer scheme if missing (https?)
    - Table date format in config
- Settings
    - Global config file?
    - Store board-specific settings in file itself?
    - Size limit, set of statuses to show
    - Show dates as timestamps or human-readable relative times
    - XDG directory?
- Analytics
    - Kanban metrics
        - Lead time (todo to complete) & cycle time (active to complete)
            - Per task, and averaged across tasks historically
            - Distributional estimates of these quantities, for forecasting purposes
    - Various throughput metrics
        - number of tasks per time
        - total priority, priority * difficulty, priority * duration, per time
- If task progresses todo->complete/paused or paused->complete, prompt for what time it was started, ex post facto.
- Recurring tasks? A la Pianote.
    - Library of tasks, with simple command to queue them into backlog
- Github/Gitlab integration
- Blocking logic
    - Prevent cyclic blocking?
    - Prevent completion of a blocked task without its precursors
        - Prompt user to complete all of them at once
- Web app (streamlit? FastUI?)
- I/O
    - Pretty output: markdown checklist/table
    - (see kanban-python) "Scanner": Input task list (grab preceding regex like "TODO:") and update board
        config["settings.scanner"] = {
            "Files": ".py .md",
            "Patterns": "# TODO,#TODO,# BUG",
        }
- Fuzzy matching of names
